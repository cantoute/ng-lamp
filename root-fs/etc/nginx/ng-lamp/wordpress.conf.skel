# certbot certonly --webroot --webroot-path /var/www/letsencrypt -d example.com -d www.example.com

server {
  listen 80;
  # listen [::]:80;

  server_name www.example.com example.com;

  root /home/example-user/example.com/www;

  client_max_body_size        128m;

  include snippets/letsencrypt-acme-challenge.conf;
  include snippets/common-vhost.conf;

  # include snippets/ban-bots.conf;

  # optimise webp delevery when using worpdress plugin webp-express
  # Note: has to be included before snippets/wordpress.conf
  # include snippets/wordpress-webp-express.conf;

  include snippets/wordpress.conf;

  # listen 443 ssl http2;

  # if ( $scheme != https ) {
  #   return 301 https://$server_name$request_uri;
  # }

  # ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
  # ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

  ## redirect all host aliases to first server_name
  if ( $host != $server_name ) {
    return 301 $scheme://$server_name$request_uri;
  }

  # remove the hsts header if it's present in the response
  proxy_hide_header Strict-Transport-Security;
  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  access_log /var/log/nginx/www.example.com_access.log;

  location / {
    try_files /dev/null @backend;
  }

  location @backend {
    proxy_pass  http://apache_upstream;
    
    include snippets/common-proxy.conf;
    include snippets/common-proxy-buffer.conf;
    include snippets/common-proxy-timeout.conf;
    
    # avoid client closing connection to backend
    proxy_set_header Connection '';

     # 100 req not delayed, then 1r/s up to 200 req then return 429
    limit_req zone=per_ip burst=200 delay=100;

    # proxy_set_header Accept-Encoding "gzip";
 
    ## logging (we only log what actually reaches backend)
    access_log /var/log/nginx/access.log combined_vhost;
  }
}

