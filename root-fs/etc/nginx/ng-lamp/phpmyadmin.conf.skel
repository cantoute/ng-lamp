server {
  include snippets/letsencrypt-acme-challenge.conf;
  include snippets/ban-bots.conf;
  include snippets/common-vhost.conf;

  listen 80;

  ## ipv6
  # listen [::]:80;
  # listen [::]:443 ssl http2;

  server_name mysql.example.com www.mysql.example.com;

  root /home/www-adm/www.mysql;

  # first run this then uncomment/adjust following lines
  # certbot certonly --webroot --webroot-path /var/www/letsencrypt -d mysql.example.com -d www.mysql.example.com

  # listen 443 ssl http2;

  # ssl_trusted_certificate /etc/letsencrypt/live/mysql.example.com/chain.pem;
  # ssl_certificate /etc/letsencrypt/live/mysql.example.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/mysql.example.com/privkey.pem;

  ## force https
  # if ( $https != on ) {
  #   return 301 https://$server_name$request_uri;
  # }

  ## redirect all host aliases to first server_name
  if ( $host != $server_name ) {
    return 302 $scheme://$server_name$request_uri;
  }

  client_max_body_size 128m;

  index index.php index.html index.htm;

  location ~ \.php$ {
    include fastcgi_params;

    send_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 1000;


    # Mitigate https://httpoxy.org/ vulnerabilities
    fastcgi_param HTTP_PROXY '';

    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    # currently set in /etc/php/7.4/fpm/pool.d/www-adm.conf
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass unix:/run/php/php7.4-fpm_www-adm.sock;
    try_files $uri =404;
  }

  location / {
    try_files $uri $uri/ =404;
  }
}